name: Basic OIDC workflow

on:
  workflow_dispatch:
  push:
    branches: ['main']

permissions:
  id-token: write #required for OIDC
  contents: read

jobs:
  first-job:
    runs-on: ubuntu-latest
    steps:
      - name: First step
        run: echo "First Step"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE_ARN }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: basic-fargate-registry
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo ${{ steps.login-ecr.outputs.registry }}
          ${{ github.sha }}
          cd docker-images/basic-express && npm i && docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG     

      - name: Render Amazon ECS task definition
        id: render-web-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: docker-images/basic-express/task-definition.json
          container-name: basic-faragte-task
          image: 339713054130.dkr.ecr.ap-south-1.amazonaws.com/basic-fargate-registry:latest
          environment-variables: "LOG_LEVEL=info"        

      - name: Install deps
        run: npm i

      # - name: First test
      #   run: ls

      # - name: CDK diff (optional)
      #   run: cd packages/infra && npx cdk diff --all || true

      # - name: Second test
      #   run: ls

      # - name: CDK deploy
      #   run: cd packages/infra && npx cdk deploy --all
